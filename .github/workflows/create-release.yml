name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v0.0.18)'
        required: true
        default: 'v0.0.18'
      release_notes:
        description: 'Release notes'
        required: false
        default: 'Bug fixes and improvements'

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Compile TypeScript
      run: npm run compile

    - name: Install vsce
      run: npm install -g @vscode/vsce@2.24.0

    - name: Update package.json version
      run: |
        VERSION=${{ github.event.inputs.version }}
        VERSION=${VERSION#v}  # Remove 'v' prefix if present
        echo "Setting version to: $VERSION"
        
        # Update package.json directly with jq or sed
        if command -v jq &> /dev/null; then
          jq --arg version "$VERSION" '.version = $version' package.json > temp.json && mv temp.json package.json
        else
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" package.json
        fi
        
        echo "Updated package.json version to: $VERSION"
        grep '"version"' package.json

    - name: Package extension
      run: vsce package --no-dependencies

    - name: Get VSIX filename
      id: get_vsix
      run: |
        VSIX_FILE=$(ls *.vsix | head -1)
        echo "vsix_file=$VSIX_FILE" >> $GITHUB_OUTPUT
        echo "Found VSIX file: $VSIX_FILE"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: XAF Model Editor ${{ github.event.inputs.version }}
        body: ${{ github.event.inputs.release_notes }}
        draft: false
        prerelease: false

    - name: Upload VSIX to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.get_vsix.outputs.vsix_file }}
        asset_name: ${{ steps.get_vsix.outputs.vsix_file }}
        asset_content_type: application/zip
